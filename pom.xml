<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.1.5</version>

    </parent>
    <groupId>org.example</groupId>
    <artifactId>Java-learning-examples</artifactId>
    <packaging>pom</packaging>
    <version>${jversion}</version>
    <description>java learning examples</description>

    <modules>
        <module>j-dependencies</module>
        <module>j-jdk-example</module>
       <module>j-util</module>
         <module>j-apache-commons-example</module>
         <module>j-jsoup-example</module>
         <module>j-jdbc-example</module>
         <module>j-mybatis-example</module>
          <module>j-mybatis-plus-example</module>
           <module>j-redis-example</module>
         <module>j-okhttp-example</module>
           <module>j-elasticsearch-example</module>
        <!--   <module>j-mockito-example</module>
          <module>j-kafka-example</module>
          <module>j-file-example</module>
          <module>j-mongodb-example</module>
          <module>j-security-example</module>
          <module>j-spring-example</module>
          <module>j-xxl-job-example</module>-->

    </modules>

    <properties>
        <spring.boot.version>3.1.5</spring.boot.version>
        <jversion>0.1-SNAPSHOT</jversion>
        <!--maven 相关-->
        <java.version>17</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>
        <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>

    </properties>

    <dependencyManagement>
      <dependencies>
          <dependency>
              <groupId>org.example</groupId>
              <artifactId>j-dependencies</artifactId>
              <version>${jversion}</version>
              <scope>import</scope>
              <type>pom</type>
          </dependency>
      </dependencies>
    </dependencyManagement>
    <build>
        <pluginManagement>
            <plugins>
                <!-- maven-surefire-plugin 插件，用于运行单元测试。 -->
                <!-- 注意，需要使用 3.0.X+，因为要支持 Junit 5 版本 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                </plugin>
                <!-- maven-compiler-plugin 插件，解决 Lombok + MapStruct 组合 -->
                <!-- https://stackoverflow.com/questions/33483697/re-run-spring-boot-configuration-annotation-processor-to-update-generated-metada -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${maven.compiler.source}</source>
                        <target>${maven.compiler.target}</target>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <repositories>
        <repository>
            <id>aliyunmaven</id>
            <name>aliyun</name>
            <url>https://maven.aliyun.com/repository/public</url>
        </repository>
    </repositories>
</project>